generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  name       String
  password   String?
  createdAt  DateTime    @default(now())
  members    Member[]
  tasks      Tasks[]     @relation("AssignedTasks")
  workspaces Workspace[] @relation("OwnedWorkspaces")
}

model Workspace {
  id         Int       @id @default(autoincrement())
  name       String
  imageUrl   String
  createdAt  DateTime  @default(now())
  inviteCode String
  userId     Int
  members    Member[]
  projects   Project[] @relation("WorkspaceProjects")
  tasks      Tasks[]   @relation("WorkspaceTasks")
  user       User      @relation("OwnedWorkspaces", fields: [userId], references: [id])
}

model Project {
  id          Int       @id @default(autoincrement())
  name        String
  imageUrl    String
  workspaceId Int
  createdAt   DateTime  @default(now())
  workspace   Workspace @relation("WorkspaceProjects", fields: [workspaceId], references: [id])
  tasks       Tasks[]
}

model Member {
  id          Int       @id @default(autoincrement())
  role        String
  userId      Int
  workspaceId Int
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id])
  workspace   Workspace @relation(fields: [workspaceId], references: [id])

  @@unique([userId, workspaceId])
}

model Tasks {
  id          Int       @id @default(autoincrement())
  workspaceId Int
  name        String
  projectId   Int
  assigneeId  Int
  description String?
  dueDate     DateTime
  status      String
  position    Int
  createdAt   DateTime  @default(now())
  assignee    User      @relation("AssignedTasks", fields: [assigneeId], references: [id])
  project     Project   @relation(fields: [projectId], references: [id])
  workspace   Workspace @relation("WorkspaceTasks", fields: [workspaceId], references: [id])
}
